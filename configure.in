AC_INIT(src/terminal.c)

AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(gnome-terminal, 1.9)

GETTEXT_PACKAGE=gnome-terminal
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE")

AM_MAINTAINER_MODE

AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AC_ARG_PROGRAM
AM_PROG_LIBTOOL

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac

  if test "x$enable_ansi" = "xyes"; then
    case " $CFLAGS " in
    *[\ \	]-ansi[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -ansi" ;;
    esac

    case " $CFLAGS " in
    *[\ \	]-pedantic[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -pedantic" ;;
    esac
  fi
fi
changequote([,])dnl

ALL_LINGUAS=""
AM_GLIB_GNU_GETTEXT

## here we get the flags we'll actually use
PKG_CHECK_MODULES(TERM, gtk+-2.0 >= 1.3.12 libzvt-2.0 gconf-2.0 >= 1.1.6 libglade-2.0 libgnomeui-2.0)

CFLAGS="$TERM_CFLAGS $CFLAGS"

AC_PATH_PROG(LIBGLADE_CONVERT, libglade-convert)
if test -z $LIBGLADE_CONVERT; then
	AC_MSG_ERROR([libglade-convert (from libglade 2.0) is needed to build $PACKAGE.])
fi

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi

AM_GCONF_SOURCE_2

# Honor aclocal flags
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_OUTPUT([
Makefile
src/Makefile
po/Makefile.in
])


